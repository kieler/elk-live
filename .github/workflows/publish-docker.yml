name: build-and-publish-docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  release:
    types: [published]
  workflow_dispatch: # manual triggering, for debugging purposes

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # QEMU setup is recommended for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name == 'release' && github.event.action == 'published' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:latest
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Clean container registry
        uses: actions/delete-package-versions@v5
        with:
          package-name: "elk-live"
          package-type: "container"
          min-versions-to-keep: 10
          token: ${{ secrets.GITHUB_TOKEN }}
